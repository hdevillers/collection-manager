{% extends "strain/base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .node circle {
            fill: #fff;
            stroke: steelblue;
            stroke-width: 1.5px;
        }

        .node {
            font: 10px sans-serif;
        }

        .link {
            fill: none;
            stroke: #ccc;
            stroke-width: 1.5px;
        }
    </style>
{% endblock %}

{% block title %}Strain {{ strain.systematicName }} - {{ strain.usualName }}{% endblock %}

{% block breadcrumb %}
    {{ parent() }}
    <li><a href="{{ path('strain_index') }}">Strains</a></li>
    <li class="active">{{ strain.systematicName }} - {{ strain.usualName }}</li>
{% endblock %}

{% block strain_body %}
    {% embed 'strain/skeleton/view.html.twig' %}
        {% block strainEditButton %}
            <div class="btn-group btn-group-xs pull-right" role="group" aria-label="...">
                {% if is_granted('STRAIN_EDIT', strain) %}
                    <a class="btn btn-warning" href="{{ path('strain_gmo_edit', { 'id': strain.id }) }}"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</a>
                {% endif %}

                {% if is_granted('STRAIN_DELETE', strain) %}
                    {% if strain.deleted %}
                        <a class="btn btn-danger" href="#" disabled><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete</a>
                    {% else %}
                        <a class="btn btn-danger" href="{{ path('strain_gmo_delete', { 'id': strain.id }) }}"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete</a>
                    {% endif %}
                {% endif %}
            </div>
        {% endblock %}

        {% block biologicalInformations %}
            <div class="panel-body">
                <p><u>Genotype:</u></p>
                <p>{{ strain.genotype }}</p>
            </div>

            <div class="panel-body">
                <p><u>Description:</u></p>
                <p>{{ strain.description }}</p>
            </div>
        {% endblock %}

        {% block plasmids %}
            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">Used plasmids</div>
                    <table class="table">
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Usual name</th>
                            <th>State</th>
                        </tr>
                        {% if strain.strainPlasmids is not empty%}
                            {% for strainPlasmid in strain.strainPlasmids %}
                                <tr>
                                    <td>{{ loop.index }}</td>
                                    <td><a href="{{ path('plasmid_view', {'id': strainPlasmid.plasmid.id}) }}">{{ strainPlasmid.plasmid.autoName }}</a></td>
                                    <td>{{ strainPlasmid.plasmid.name }}</td>
                                    <td>{{ strainPlasmid.state }}</td>
                                </tr>
                            {% endfor %}
                        {% else %}
                            <tr>
                                <td colspan="4" style="text-align:center;">There is no plasmids.</td>
                            </tr>
                        {% endif %}
                    </table>
                </div>
            </div>
        {% endblock %}
    {% endembed %}

    <div class="panel panel-default">
        <div class="panel-heading">Parents</div>
        <div class="panel-body" id="tree1"></div>
        <ul class="list-group">
            {% for parent in strain.parents %}
                <li class="list-group-item"><a href="{{ path('strain_gmo_view', { 'id': parent.id }) }}">{{ parent.fullName }}</a></li>
            {% endfor %}
        </ul>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Children</div>
        <div class="panel-body" id="tree2"></div>
        <ul class="list-group">
            {% for child in strain.children %}
                <li class="list-group-item"><a href="{{ path('strain_gmo_view', { 'id': child.id }) }}">{{ child.fullName }}</a></li>
            {% endfor %}
        </ul>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="//d3js.org/d3.v3.min.js"></script>

    <script>
        var width = 800,
            height = 400;

        var tree = d3.layout.tree()
            .size([height, width - 300]);

        var diagonal = d3.svg.diagonal()
            .projection(function(d) { return [d.y, d.x]; });

        var svgParents = d3.select("#tree1").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(150,0)");

        var svgChildren = d3.select("#tree2").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(150,0)");

        d3.json("{{ path('strain_parental_parents', {'id': strain.id}) }}", function(error, json) {
          if (error) throw error;

          var nodes = tree.nodes(json),
              links = tree.links(nodes);

          var link = svgParents.selectAll("path.link")
              .data(links)
              .enter().append("path")
              .attr("class", "link")
              .attr("d", diagonal);

          var node = svgParents.selectAll("g.node")
              .data(nodes)
            .enter().append("g")
              .attr("class", "node")
              .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

          node.append("circle")
              .attr("r", 4.5);

          node.append("text")
              .attr("dx", function(d) { return d.children ? -8 : 8; })
              .attr("dy", 3)
              .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
              .text(function(d) { return d.name; });
        });

        d3.json("{{ path('strain_parental_children', {'id': strain.id}) }}", function(error, json) {
            if (error) throw error;

            var nodes = tree.nodes(json),
                links = tree.links(nodes);

            var link = svgChildren.selectAll("path.link")
                .data(links)
                .enter().append("path")
                .attr("class", "link")
                .attr("d", diagonal);

            var node = svgChildren.selectAll("g.node")
                .data(nodes)
                .enter().append("g")
                .attr("class", "node")
                .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

            node.append("circle")
                .attr("r", 4.5);

            node.append("text")
                .attr("dx", function(d) { return d.children ? -8 : 8; })
                .attr("dy", 3)
                .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
                .text(function(d) { return d.name; });
        });

        d3.select(self.frameElement).style("height", height + "px");
    </script>
{% endblock %}
