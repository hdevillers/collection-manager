<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;

/**
 * TeamRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllWithMembers()
    {
        $query = $this->createQueryBuilder('team')
            ->leftJoin('team.administrators', 'administrators')
                ->addSelect('administrators')
            ->leftJoin('team.members', 'members')
                ->addSelect('members')
            ->orderBy('team.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    public function findOneWithMembers($param)
    {
        $query = $this->createQueryBuilder('team')
            ->leftJoin('team.administrators', 'administrators')
                ->addSelect('administrators')
            ->leftJoin('team.members', 'members')
                ->addSelect('members')
            ->where('team.slug = :slug')
                ->setParameter('slug', $param['slug'])
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findOneWithMembersProjects($param)
    {
        $query = $this->createQueryBuilder('team')
            ->leftJoin('team.administrators', 'administrators')
            ->addSelect('administrators')
            ->leftJoin('team.members', 'members')
            ->addSelect('members')
            ->leftJoin('members.projects', 'membersProjects')
            ->addSelect('membersProjects')
            ->leftJoin('team.projects', 'teamProjects')
            ->addSelect('teamProjects')
            ->where('team.slug = :slug')
                ->setParameter('slug', $param['slug'])
            ->andWhere('teamProjects.private = false')
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findAllForUser(User $user)
    {
        $query = $this->createQueryBuilder('team')
            ->leftJoin('team.members', 'members')
            ->leftJoin('team.administrators', 'administrators')
                ->addSelect('administrators')
            ->where('members = :user')
                ->setParameter('user', $user)
            ->orderBy('team.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }
}
